public static boolean areSimilar2(Node n1, Node n2) {
    // write your code here
    if(n1==null && n2==null){
      return true;
    }
    if(n1==null){
      return false;
    }
    if(n2==null){
      return false;
    }
    Queue<Node> q1 = new ArrayDeque<>();
    Queue<Node> q2 = new ArrayDeque<>();
    q1.add(n1);
    q2.add(n2);
    while(q1.size()!=0 && q2.size()!=0){
      int size1 = q1.size();
      while(size1-->0){
        Node r1 = q1.remove();
        Node r2 = q2.remove();
        if(r1.children.size() != r2.children.size()){
          return false;
        }
        for(int i=0;i<r1.children.size();i++){
          q1.add(r1.children.get(i));
          q2.add(r2.children.get(i));
        }
      }
    }
    return true;
  }

  public static boolean areSimilar(Node n1, Node n2) {
    // write your code here
    if(n1==null && n2==null){
      return true;
    }
    if(n1==null){
      return false;
    }
    if(n2==null){
      return false;
    }
    if(n1.children.size()!=n2.children.size()){
      return false;
    }
    for(int i=0;i<n1.children.size();i++){
      return areSimilar(n1.children.get(i),n2.children.get(i));
    }
    return true;
  }
