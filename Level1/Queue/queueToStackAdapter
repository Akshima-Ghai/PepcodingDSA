public static class QueueToStackAdapter {
    Queue<Integer> mainQ;
    Queue<Integer> helperQ;

    public QueueToStackAdapter() {
      mainQ = new ArrayDeque<>();
      helperQ = new ArrayDeque<>();
    }

    int size() {
      // write your code here
      return mainQ.size();
    }

    void push(int val) {
      // write your code here
      mainQ.add(val);
    }

    int pop() {
      // write your code here
      if(size()==0){
        System.out.println("Stack underflow");
        return -1;
      }
      int val=0;
      for(int i=0;i<size();i++){
        val = mainQ.remove();
        if(i<size()){
          mainQ.add(val);
        }
      }
      return val;
    }

    int top() {
      // write your code here
      if(size()==0){
        System.out.println("Stack underflow");
        return -1;
      }
      int val=0;
      for(int i=0;i<size();i++){
        val = mainQ.remove();
        mainQ.add(val);
      }
      return val;
    }
  }
